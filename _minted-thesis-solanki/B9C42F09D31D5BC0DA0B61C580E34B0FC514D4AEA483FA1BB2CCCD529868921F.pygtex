\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+cm}{\PYGZob{}\PYGZhy{}\PYGZsh{} LANGUAGE  DeriveDataTypeable,}
\PYG{c+cm}{              ViewPatterns,}
\PYG{c+cm}{              ScopedTypeVariables,}
\PYG{c+cm}{              DefaultSignatures,}
\PYG{c+cm}{              TypeOperators,}
\PYG{c+cm}{              TypeFamilies,}
\PYG{c+cm}{              DataKinds,}
\PYG{c+cm}{              DataKinds,}
\PYG{c+cm}{              PolyKinds,}
\PYG{c+cm}{              OverlappingInstances,}
\PYG{c+cm}{              TypeOperators,}
\PYG{c+cm}{              LiberalTypeSynonyms,}
\PYG{c+cm}{              TemplateHaskell,}
\PYG{c+cm}{              AllowAmbiguousTypes,}
\PYG{c+cm}{              ConstraintKinds,}
\PYG{c+cm}{              Rank2Types,}
\PYG{c+cm}{              MultiParamTypeClasses,}
\PYG{c+cm}{              FunctionalDependencies,}
\PYG{c+cm}{              FlexibleContexts,}
\PYG{c+cm}{              FlexibleInstances,}
\PYG{c+cm}{              UndecidableInstances}
\PYG{c+cm}{              \PYGZsh{}\PYGZhy{}\PYGZcb{}}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} stitutions and Unification of Prolog Terms}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Mark P. Jones November 1990, modified for Gofer 20th July 1991,}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{} and for Hugs 1.3 June 1996.}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{}}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Suitable for use with Hugs 98.}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{}}

\PYG{k+kr}{module} \PYG{err}{st} \PYG{err}{where}

\PYG{err}{import} \PYG{n+nn}{Prolog}
\PYG{k+kr}{import} \PYG{n+nn}{CustomSyntax}
\PYG{k+kr}{import} \PYG{n+nn}{Data.Map} \PYG{k}{as} \PYG{n}{Map}
\PYG{k+kr}{import} \PYG{n+nn}{Data.Maybe}
\PYG{k+kr}{import} \PYG{n+nn}{Data.Either}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{}Unification}
\PYG{k+kr}{import} \PYG{n+nn}{Control.Unification.IntVar}
\PYG{k+kr}{import} \PYG{n+nn}{Control.Unification.STVar} \PYG{k}{as} \PYG{n}{ST}

\PYG{k+kr}{import} \PYG{n+nn}{Control.Unification.Ranked.IntVar}
\PYG{k+kr}{import} \PYG{n+nn}{Control.Unification.Ranked.STVar}

\PYG{k+kr}{import} \PYG{n+nn}{Control.Unification.Types} \PYG{k}{as} \PYG{n}{UT}

\PYG{k+kr}{import} \PYG{n+nn}{Control.Monad.State.UnificationExtras}
\PYG{k+kr}{import} \PYG{n+nn}{Control.Unification} \PYG{k}{as} \PYG{n}{U}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Monads}
\PYG{k+kr}{import} \PYG{n+nn}{Control.Monad.Error}
\PYG{k+kr}{import} \PYG{n+nn}{Control.Monad.Trans.Except}

\PYG{k+kr}{import} \PYG{n+nn}{Data.Functor.Fixedpoint} \PYG{k}{as} \PYG{n}{DFF}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{}State}
\PYG{k+kr}{import} \PYG{n+nn}{Control.Monad.State.Lazy}
\PYG{k+kr}{import} \PYG{n+nn}{Control.Monad.ST}
\PYG{k+kr}{import} \PYG{n+nn}{Control.Monad.Trans.State} \PYG{k}{as} \PYG{n}{Trans}

\PYG{k+kr}{infixr} \PYG{l+m+mi}{3} \PYG{o}{@@}
\PYG{k+kr}{infix}  \PYG{l+m+mi}{4} \PYG{o}{\PYGZhy{}\PYGZgt{}\PYGZhy{}}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{}\PYGZhy{} stitutions:}

\PYG{k+kr}{type} \PYG{n}{st} \PYG{o+ow}{=} \PYG{k+kt}{Id} \PYG{o+ow}{\PYGZhy{}\PYGZgt{}} \PYG{k+kt}{Term}

\PYG{k+kr}{newtype} \PYG{n}{stP} \PYG{o+ow}{=} \PYG{n}{stP} \PYG{p}{\PYGZob{}} \PYG{n}{unstP} \PYG{o+ow}{::} \PYG{n}{st} \PYG{p}{\PYGZcb{}}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} instance Show stP where}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{}  show (i) = show \PYGZdl{} Var i}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{} stitutions are represented by functions mapping identifiers to terms.}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{}}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{} app s     extends the stitution s to a function mapping terms to terms}
\PYG{c+cm}{\PYGZob{}\PYGZhy{}\PYGZhy{}}
\PYG{c+cm}{Looks like an apply function that applies a stitution function tho the variables in a term.}
\PYG{c+cm}{\PYGZhy{}\PYGZhy{}\PYGZcb{}}


\PYG{c+c1}{\PYGZhy{}\PYGZhy{} nullst is the empty stitution which maps every identifier to the same identifier (as a term).}



\PYG{c+c1}{\PYGZhy{}\PYGZhy{} i \PYGZhy{}\PYGZgt{}\PYGZhy{} t   is the stitution which maps the identifier i to the term t, but otherwise behaves like nullst.}


\PYG{c+c1}{\PYGZhy{}\PYGZhy{} s1@@ s2  is the composition of stitutions s1 and s2}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{}           N.B.  app is a monoid homomorphism from (st,nullst,(@@))}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{}           to (Term \PYGZhy{}\PYGZgt{} Term, id, (.)) in the sense that:}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{}                  app (s1 @@ s2) = app s1 . app s2}
\PYG{c+c1}{\PYGZhy{}\PYGZhy{}                 s @@ nullst = s = nullst @@ s}

\PYG{n+nf}{app}                     \PYG{o+ow}{::} \PYG{n}{st} \PYG{o+ow}{\PYGZhy{}\PYGZgt{}} \PYG{k+kt}{Term} \PYG{o+ow}{\PYGZhy{}\PYGZgt{}} \PYG{k+kt}{Term}
\PYG{n+nf}{app} \PYG{n}{s} \PYG{p}{(}\PYG{k+kt}{Var} \PYG{n}{i}\PYG{p}{)}            \PYG{o+ow}{=} \PYG{n}{s} \PYG{n}{i}
\PYG{n+nf}{app} \PYG{n}{s} \PYG{p}{(}\PYG{k+kt}{Struct} \PYG{n}{a} \PYG{n}{ts}\PYG{p}{)}      \PYG{o+ow}{=} \PYG{k+kt}{Struct} \PYG{n}{a} \PYG{p}{(}\PYG{k+kt}{Prelude}\PYG{o}{.}\PYG{n}{map} \PYG{p}{(}\PYG{n}{app} \PYG{n}{s}\PYG{p}{)} \PYG{n}{ts}\PYG{p}{)}
\PYG{c+cm}{\PYGZob{}\PYGZhy{}\PYGZhy{}}
\PYG{c+cm}{app (stFunction) (Struct \PYGZdq{}hello\PYGZdq{} [Var (0, \PYGZdq{}Var\PYGZdq{})])}
\PYG{c+cm}{hello(Var\PYGZus{}2) :: Term}

\PYG{c+cm}{\PYGZhy{}\PYGZhy{}\PYGZcb{}}


\PYG{n+nf}{nullst}               \PYG{o+ow}{::} \PYG{n}{st}
\PYG{n+nf}{nullst} \PYG{n}{i}              \PYG{o+ow}{=} \PYG{k+kt}{Var} \PYG{n}{i}
\PYG{c+cm}{\PYGZob{}\PYGZhy{}\PYGZhy{}}
\PYG{c+cm}{nullst (0, \PYGZdq{}Var\PYGZdq{})}
\PYG{c+cm}{Var :: Term}
\PYG{c+cm}{\PYGZhy{}\PYGZhy{}\PYGZcb{}}


\PYG{c+c1}{\PYGZhy{}\PYGZhy{}}
\PYG{p}{(}\PYG{o}{\PYGZhy{}\PYGZgt{}\PYGZhy{}}\PYG{p}{)}                   \PYG{o+ow}{::} \PYG{k+kt}{Id} \PYG{o+ow}{\PYGZhy{}\PYGZgt{}} \PYG{k+kt}{Term} \PYG{o+ow}{\PYGZhy{}\PYGZgt{}} \PYG{n}{st}
\PYG{p}{(}\PYG{n}{i} \PYG{o}{\PYGZhy{}\PYGZgt{}\PYGZhy{}} \PYG{n}{t}\PYG{p}{)} \PYG{n}{j} \PYG{o}{|} \PYG{n}{j}\PYG{o}{==}\PYG{n}{i}       \PYG{o+ow}{=} \PYG{n}{t}
            \PYG{o}{|} \PYG{n}{otherwise}  \PYG{o+ow}{=} \PYG{k+kt}{Var} \PYG{n}{j}
\PYG{c+cm}{\PYGZob{}\PYGZhy{}\PYGZhy{}}
\PYG{c+cm}{:t (\PYGZhy{}\PYGZgt{}\PYGZhy{}) (1,\PYGZdq{}X\PYGZdq{}) (Struct \PYGZdq{}hello\PYGZdq{} [])}
\PYG{c+cm}{(1,\PYGZdq{}X\PYGZdq{}) \PYGZhy{}\PYGZgt{}\PYGZhy{} Struct \PYGZdq{}hello\PYGZdq{} [] :: (Int,[Char]) \PYGZhy{}\PYGZgt{} Term}
\PYG{c+cm}{\PYGZhy{}\PYGZhy{}\PYGZcb{}}


\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Function composition for applying two stitution functions.}
\PYG{p}{(}\PYG{o}{@@}\PYG{p}{)}                    \PYG{o+ow}{::} \PYG{n}{st} \PYG{o+ow}{\PYGZhy{}\PYGZgt{}} \PYG{n}{st} \PYG{o+ow}{\PYGZhy{}\PYGZgt{}} \PYG{n}{st}
\PYG{n+nf}{s1} \PYG{o}{@@} \PYG{n}{s2}                 \PYG{o+ow}{=} \PYG{n}{app} \PYG{n}{s1} \PYG{o}{.} \PYG{n}{s2}
\end{Verbatim}
