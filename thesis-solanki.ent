\@doanenote {1}
macro:->We
need
to
remove
the
section
marker
here.

\par\endgroup
\@doanenote {2}
macro:->What
style
guide
are
you
using
to
determine
capitalization?
none
at
the
moment

\par\endgroup
\@doanenote {3}
macro:->Say
more
here?
This
seems
like
a
natural
place
to
have
more
high-level
comments
on
where
the
thesis
is
going.

\par\endgroup
\@doanenote {4}
macro:->Reference?
How
did
you
come
up
with
this
estimate?
\par
https://en.wikipedia.org/wiki/Timeline\_of\_programming\_languages
\par
http://www.thesoftwareguild.com/history-of-programming-languages/

\par\endgroup
\@doanenote {5}
macro:->What
is
the
key
idea
in
this
\P
{}?
I
believe
that
you
want
to
link
this
\P
{}
to
the
idea
that
embedded
or
merged
languages
are
good,
but
I
don't
see
where
you
do
that.

\par\endgroup
\@doanenote {6}
macro:->this
looks
like
it
has
been
cut
and
paste,
not
so
sure

\par\endgroup
\@doanenote {7}
macro:->The
idea
of
this
sentence
is
good,
but
the
wording
needs
improvement.

\par\endgroup
\@doanenote {8}
macro:->This
preceding
phrase
is
not
a
sentence.

\par\endgroup
\@doanenote {9}
macro:->This
example
isn't
as
clear
to
me
as
the
one
in
the
last
sentence.
how
do
I
say
that
mathematics
can
be
translated
to
declarative
easily
in
declarative
paradigm

\par\endgroup
\@doanenote {10}
macro:->Use
``must''
in
place
of
``have
to''
where
you
can.

\par\endgroup
\@doanenote {11}
macro:->I
have
the
feeling
that
you
should
introduce
the
concept
of
DSLs
slightly
higher.
higher
???

\par\endgroup
\@doanenote {12}
macro:->``To
dawn
the
avatar''?
This
is
poetic.
Did
you
mean
``to
don''?

\par\endgroup
\@doanenote {13}
macro:->Say
what
``the
above''
is.

\par\endgroup
\@doanenote {14}
macro:->``Shortcomings''
is
one
word.
``the
road
to
a
better
future''
is
poetic,
but
too
vague.

\par\endgroup
\@doanenote {15}
macro:->\begin
{itemize}
\item
Why
is
``Languages''
capitalized?
\item
Use
\Verb
!``!
and
\Verb
!''!
to
quote
material
in
\LaTeX
{}
source,
not
\Verb
!"!\,.
\end
{itemize}

\par\endgroup
\@doanenote {16}
macro:->comma
splice.

\par\endgroup
\@doanenote {17}
macro:->Can
you
find
an
article
or
book
rather
than
a
website
as
a
reference
here?
\cite
{hindley1969principal},
\cite
{milner1978theory}

\par\endgroup
\@doanenote {18}
macro:->This
is
a
sentence
fragment.
I
think
that
you
mean
something
like:
\textsl
{The
Hindley-Milner
like
type
systems
have
the
ability
to
give
a
most
general
type
of
a
program
without
any
annotations.}

\par\endgroup
\@doanenote {19}
macro:->What
is
the
relevance
of
this
\P
{}
to
the
thesis?
To
explain
the
working,
not
directly
required
I
guess
but
since
\progLang
{Haskell}
is
statically
typed

\par\endgroup
\@doanenote {20}
macro:->There
is
an
abrupt
transition
here.
The
preceding
\P
's
have
discussed
the
general
nature
of
functional
and
logic
programming.
You
need
to
tell
the
reader
that
you
now
want
to
talk
about
integrating
two
programming
languages,
namely,
\progLang
{Prolog}
and
\progLang
{Haskell}.

\par\endgroup
\@doanenote {21}
macro:->This
\P
{}
needs
rewriting.

\par\endgroup
\@doanenote {22}
macro:->I
do
not
understand
the
sentence
before
the
comma.

\par\endgroup
\@doanenote {23}
macro:->comma
splice.

\par\endgroup
\@doanenote {24}
macro:->comma
splice.

\par\endgroup
\@doanenote {25}
macro:->Now
signal
that
you
are
switching
directions:
\textsl
{Other
approaches
provide
deeper
integration}.

\par\endgroup
\@doanenote {26}
macro:->Do
you
want
to
give
the
\progLang
{Scala}
here?

\par\endgroup
\@doanenote {27}
macro:->I
think
that
this
usage
of
``reflective''
needs
some
common.
Usually
\textit
{reflective}
refers
to
run-time
access
to
information
about
the
object
language
text;
what
you
are
discussing
is
compile-time
access
to
the
object
language.
?????

\par\endgroup
\@doanenote {28}
macro:->The
preceding
sentence
needs
fixing.
\par

\par\endgroup
\@doanenote {29}
macro:->Is
the
point
here
that
templating
helps,
or
what?
it
is
just
one
of
the
many
ways
to
bring
the
languages
together

\par\endgroup
\@doanenote {30}
macro:->comma
splice.

\par\endgroup
\@doanenote {31}
macro:->Should
this
example
be
moved
up
to
where
you
are
discussing
multi-paradigm
languages?
Wrote
something
about
\progLang
{Scala}
up
there.

\par\endgroup
\@doanenote {32}
macro:->Sentence
fragment.

\par\endgroup
\@doanenote {33}
macro:->Provide
citations
here.

\par\endgroup
\@doanenote {34}
macro:->What
does
this
point
mean?

\par\endgroup
\@doanenote {35}
macro:->I
think
that
this
fits
in
with
the
discussion
of
\progLang
{Scala}
in
the
previous
chapter.

\par\endgroup
\@doanenote {36}
macro:->This
is
a
good
bridging
sentence,
but
should
probably
end
the
last
section,
rather
than
begin
this
one.

\par\endgroup
\@doanenote {37}
macro:->Not
``would
form''.
``forms''
perhaps.
You
are
talking
about
what
\textbf
{is}
in
the
thesis.

\par\endgroup
\@doanenote {38}
macro:->Strike
this?
well
we/
the
library
does
some
of
this
right
?
\par

\par\endgroup
\@doanenote {39}
macro:->Use
``quote
likes
shown'',
not
"quotes
like
this".
\par
Really
try
to
avoid
hedging
your
bets
with
scare-quotes.

\par\endgroup
\@doanenote {40}
macro:->This
is
known
as
a
comma
splice.
You
have
a
sentence
before,
and
a
sentence
after
the
comma.
Either
use
a
semicolon,
or
write
two
sentences.

\par\endgroup
\@doanenote {41}
macro:->What
does
``accomplish
goals''
mean
here?
Is
this
what
is
called
\Verb
!getClauses!
in
\codeLibrary
{prolog-0.2.1}\,?

\par\endgroup
\@doanenote {42}
macro:->Do
not
expect
readers
to
know
what
a
\textsf
{REPL}
is.

\par\endgroup
\@doanenote {43}
macro:->replace
with
``the
\Verb
!Unifiable!
class.

\par\endgroup
\@doanenote {44}
macro:->what
does
this
reference?

\par\endgroup
\@doanenote {45}
macro:->What
are
your
conventions
for
when
you
use
capitals,
and
when
not?
Not
yet
decided.

\par\endgroup
\@doanenote {46}
macro:->Drop
the
``would''s
here.
We
\textit
{do}
need
to
define
a
\progLang
{Prolog}
type.

\par\endgroup
\@doanenote {47}
macro:->``is
a
classic
example
of
\yyy
{}{using
a
recursive
data
type}
\xxx
{a
recursive
grammar}
to
define
the
abstract
syntax
of
a
language.''
---
perhaps?

\par\endgroup
\@doanenote {48}
macro:->What
do
you
mean
by
``primitives
of
the
language''?
Adopted
from
\cite
{website:understandingalgebrasfpcomplete}

\par\endgroup
\@doanenote {49}
macro:->I
cannot
follow
this
sentence.
I
do
not
know
what
I
was
thinking

\par\endgroup
\@doanenote {50}
macro:->You
have
`\textit
{FlatTerm}'
and
`"FlatTerm"'.
Why
not
\texttt
{FlatTerm}
or
better
yet
\texttt
{\csname
@backslashchar\endcsname
code\{FlatTerm\}},
where
\texttt
{\csname
@backslashchar\endcsname
code}
is
a
macro
you
define.

\par\endgroup
\@doanenote {51}
macro:->Do
you
understand
why
``it's''
should
be
``its''
here?
Yes

\par\endgroup
\@doanenote {52}
macro:->Why
do
we
explain
\textit
{kinds}?
Is
this
in
preparation
for
\texttt
{\bfseries
Functor}?
Well
Int,
String
etc
etc
are
kinds
in
haskell
so
a
FlatTerm
int
where
int
is
*

\par\endgroup
\@doanenote {53}
macro:->Why
do
you
need
to
discuss
value
fixed
points
(\textit
{i.e.,}
\texttt
{\bfseries
fix})?
Do
you
need
them?
\par
Well
not
really
but
since
we
are
talking
about
fixed
point
in
general

\par\endgroup
\@doanenote {54}
macro:->I
am
deeply
suspicious
of
the
instance
for
\texttt
{Applicative}
given.
\par
I
agree,
I
think
I
just
created
one
for
the
purpose
of
the
diagram.

\par\endgroup
\@doanenote {55}
macro:->In
this
immediate
region,
I
(dgc)
removed
text
inserted
by
a
failed
push
or
pull
merge.
Check
to
see
that
it
is
correct,
or
reverse
commit
\texttt
{95804e3\dots
}.

\par\endgroup
