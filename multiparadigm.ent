\@doanenote {1}
macro:->Unless
you
are
using
leaf
in
the
sense
of
page
(as
in
\textit
{overleaf}),
``a
leaf
from
each
of
the
[two]
books''
is
a
mixed
metaphor.

\par\endgroup
\@doanenote {2}
macro:->There
are
some
capitals
to
look
at
here.

\par\endgroup
\@doanenote {3}
macro:->``discussed
on''
does
not
work.

\par\endgroup
\@doanenote {4}
macro:->What
is
the
``conventional
ideology''
here?
As
defined
where?

\par\endgroup
\@doanenote {5}
macro:->Yet
another
metaphor
that
doesn't
spin
my
wheels.

\par\endgroup
\@doanenote {6}
macro:->What
is
``it''
here?

\par\endgroup
\@doanenote {7}
macro:->What
is
``it''
here?
Is
this
the
same
``it''
as
above?

\par\endgroup
\@doanenote {8}
macro:->Which
fog?

\par\endgroup
\@doanenote {9}
macro:->What
do
you
mean
by
``backdrop
of
[the]
publications''?

\par\endgroup
\@doanenote {10}
macro:->Use
``must''
in
place
of
``have
to''
where
you
can.

\par\endgroup
\@doanenote {11}
macro:->``Although''
fights
with
``but''.
Remove
one
or
the
other;
and
put
a
comma
before
``such
as''.

\par\endgroup
\@doanenote {12}
macro:->Otherwise
you
have
a
sentence
fragment.

\par\endgroup
\@doanenote {13}
macro:->The
preceding
sentence
is
awkward,
although
the
intent
is
very
good.
Here
is
one
attempt
at
rewording
it.
\par
\vspace
*{-1\baselineskip
}
\begin
{quote}
\slshape
Combining
objects
with
functions
is
important
as
object-oriented
programming
has
become
one
of
the
most
common
styles
of
programming.
Hence
even
\progLang
{Haskell}
has
a
combined
language
\enparen
{called
\progLang
{O'Haskell},
\cite
{website:ohaskell}},
though
it
last
saw
a
release
back
in
2001.
\end
{quote}

\par\endgroup
\@doanenote {14}
macro:->This
is
a
good
sentence;
but
I
believe
that
the
changes
indicated
make
it
clearer.

\par\endgroup
\@doanenote {15}
macro:->The
rewording
avoids
a
sentence
fragment.

\par\endgroup
\@doanenote {16}
macro:->``\progLang
{Nue
Prolog}''
or
``\progLang
{Neu
Prolog}''?

\par\endgroup
\@doanenote {17}
macro:->Are
we
done
with
Australia?
If
so,
insert
something
like
``\textsl
{Turning
now
to
other
languages,}''.

\par\endgroup
\@doanenote {18}
macro:->This
is
a
good
sentence
but
could
be
worded
more
clearly.
Here
is
one
attempt:
\textsl
{
We
take
a
look
at
\progLang
{Prolog}
variants:
\progLang
{Ciao}
\enparen
{\cite
{website:ciao}}
is
a
preprocessor
to
\progLang
{Prolog}
for
functional
syntax
support;
\progLang
{$\lambda
$
Prolog}
\enparen
{\cite
{website:lambda-prolog}}
aims
at
modular
higher
order
programming
with
abstract
data
types
in
a
logical
setting;
\progLang
{Babel}
\enparen
{\cite
{website:babel,moreno1992logic,
moreno1988babel}}
combines
pure
\progLang
{Prolog}
with
a
first
order
functional
notation;
\progLang
{LIFE}
\enparen
{\cite
{website:life}}
is
for
Logic,
Inheritance,
Functions
and
Equations
in
\progLang
{Prolog}
syntax
with
currying
and
other
features
like
functional
languages;
and
there
are
others
\enparen
{\cite
{bert1987lpg,malachi1984tablog}}.}

\par\endgroup
\@doanenote {19}
macro:->What
sort
of
thing?

\par\endgroup
